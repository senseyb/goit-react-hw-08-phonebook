{"version":3,"sources":["redux/auth/auth.operations.js","redux/auth/auth.actions.js","redux/auth/auth.reducer.js","redux/contacts/contacts.reducer.js","redux/store.js","components/UserMenu/Navigation.js","redux/auth/auth.selectors.js","components/UserMenu/UserMenu.js","components/UserMenu/AuthNav.js","components/UserMenu/AppBar.js","components/UserMenu/PrivateRoute.js","components/UserMenu/PublicRoute.js","App.js","index.js","redux/contacts/contacts.actions.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","login","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","window","location","reload","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","createAction","initialUserState","name","email","user","createReducer","_","payload","error","authReducer","combineReducers","loading","getAllContactsRequest","getAllContactsSuccess","getAllContactsError","addNewContactsRequest","addNewContactsSuccess","addNewContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","items","action","state","filter","item","id","filterChange","todosReducer","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","Navigation","to","exact","getIsAuthenticated","getUsername","mapDispatchToProps","onLogout","connect","type","onClick","AuthNav","isAuthenticated","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","Contacts","App","this","onGetCurrentUser","className","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f370fc5.chunk.js","sourcesContent":["import axios from \"axios\";\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"./auth.actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n    token.set(response.data.token);\n    dispatch(registerSuccess(response.data));\n  } catch (error) {\n    dispatch(registerError(error));\n  }\n};\n\nconst login = (credentials) => async (dispatch) => {\n  dispatch(loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n    token.set(response.data.token);\n    dispatch(loginSuccess(response.data));\n  } catch (error) {\n    dispatch(loginError(error));\n  }\n};\n\nconst logOut = () => async (dispatch) => {\n  dispatch(logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n    dispatch(logoutSuccess());\n    window.location.reload();\n  } catch (error) {\n    dispatch(logoutError(error));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n  try {\n    const response = await axios.get(\"users/current\");\n    dispatch(getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(getCurrentUserError(error));\n  }\n};\n\nexport { register, login, logOut, getCurrentUser };\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nexport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"./auth.actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logoutError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n});\n\nconst authReducer = combineReducers({\n  user,\n  token,\n  error,\n});\n\nexport { authReducer };\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addNewContactsRequest,\n  addNewContactsSuccess,\n  addNewContactsError,\n  getAllContactsRequest,\n  getAllContactsSuccess,\n  getAllContactsError,\n  filterChange,\n  removeContactsRequest,\n  removeContactsSuccess,\n  removeContactsError,\n} from \"./contacts.actions\";\n\nconst loading = createReducer(false, {\n  [getAllContactsRequest]: () => true,\n  [getAllContactsSuccess]: () => false,\n  [getAllContactsError]: () => false,\n  [addNewContactsRequest]: () => true,\n  [addNewContactsSuccess]: () => false,\n  [addNewContactsError]: () => false,\n  [removeContactsRequest]: () => true,\n  [removeContactsSuccess]: () => false,\n  [removeContactsError]: () => false,\n});\n\nconst items = createReducer([], {\n  [getAllContactsSuccess]: (_, action) => action.payload,\n  [addNewContactsSuccess]: (state, action) => [action.payload, ...state],\n  [removeContactsSuccess]: (state, action) =>\n    state.filter((item) => item.id !== action.payload),\n });\n\nconst filter = createReducer(\"\", {\n  [filterChange]: (_, action) => action.payload,\n});\n\nconst todosReducer = combineReducers({\n  items,\n  filter,\n  loading,\n});\n\nexport default todosReducer;","import { getDefaultMiddleware, configureStore } from \"@reduxjs/toolkit\";\nimport { authReducer } from \"./auth/auth.reducer\";\nimport contactsReducer from \"./contacts/contacts.reducer\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"]\n}\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store)\n\nexport  {store, persistor};\n\n\n\n\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navigation = () => (\n  <div>\n    <NavLink to=\"/\" exact>\n      Главная страница\n    </NavLink>\n    <NavLink to=\"/contacts\" exact>\n      Страница контактов\n    </NavLink>\n  </div>\n);\n\nexport default Navigation;\n","const getIsAuthenticated = (state) => state.auth.token;\n\nconst getUsername = state => state.auth.user.name;\n\nexport { getIsAuthenticated, getUsername };\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { getUsername } from \"../../redux/auth/auth.selectors\";\nimport {logOut} from \"../../redux/auth/auth.operations\"\n\nconst UserMenu = ({ name, onLogout }) => (\n  <div>\n    \n    <span>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n    name: getUsername(state),\n  \n});\n\nconst mapDispatchToProps = {\n  onLogout: logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react'\nimport {NavLink} from \"react-router-dom\"\n\nconst AuthNav = () => (\n  <div>\n    <NavLink to=\"/register\" exact>\n      Регистрация\n    </NavLink>\n    <NavLink to=\"/login\" exact>\n      Логин\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;","import React from 'react'\nimport Navigation from \"./Navigation\"\nimport UserMenu from \"./UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport { connect } from 'react-redux';\nimport {getIsAuthenticated} from \"../../redux/auth/auth.selectors\"\n\n\nconst AppBar = ({ isAuthenticated }) => (\n    <header>\n      <Navigation />\n      {isAuthenticated ? <UserMenu/> : <AuthNav/>}\n    </header>\n)\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: getIsAuthenticated(state),\n})\n\nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\"\nimport { getIsAuthenticated } from \"../../redux/auth/auth.selectors\"\n\nconst PrivateRoute = ({\n    component: Component,\n    isAuthenticated,\n    redirectTo,\n    ...routeProps\n}) => (\n \n    <Route {...routeProps}\n        \n        render={props => {\n           return isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n        }\n        }\n    />\n);\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getIsAuthenticated } from \"../../redux/auth/auth.selectors\";\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  restricted = false,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) => {\n      return isAuthenticated && restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      );\n    }}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import { Suspense, lazy, Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch} from \"react-router-dom\";\nimport AppBar from \"./components/UserMenu/AppBar\";\nimport { getCurrentUser } from \"./redux/auth/auth.operations\";\nimport PrivateRoute from \"./components/UserMenu/PrivateRoute\";\nimport PublicRoute from \"./components/UserMenu/PublicRoute\";\n\nconst HomeView = lazy(() =>\n  import(\"./views/HomeView\" /* webpackChunkName: \"home-view\" */)\n);\n\nconst RegisterView = lazy(() =>\n  import(\"./views/RegisterView\" /* webpackChunkName: \"register-view\" */)\n);\nconst LoginView = lazy(() =>\n  import(\"./views/LoginView\" /* webpackChunkName: \"login-view\" */)\n);\nconst Contacts = lazy(() =>\n  import(\"./components/Contacts\" /* webpackChunkName: \"contacts-view\" */)\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <div className=\"block\">\n        <AppBar />\n        <Suspense fallback={<p>Loading in progress...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              exact\n              restricted\n              path=\"/register\"\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              exact\n              restricted\n              path=\"/login\"\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              exact\n              path=\"/contacts\"\n              component={Contacts}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport {store, persistor} from \"./redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addNewContactsRequest = createAction(\"contacts/addNewContactsRequest\");\nconst addNewContactsSuccess = createAction(\"contacts/addNewContactsSuccess\");\nconst addNewContactsError = createAction(\"contacts/addNewContactsError\");\n\nconst getAllContactsRequest = createAction(\"contacts/getAllContactsRequest\");\nconst getAllContactsSuccess = createAction(\"contacts/getAllContactsSuccess\");\nconst getAllContactsError = createAction(\"contacts/getAllContactsError\");\n\nconst filterChange = createAction(\"contacts/filterChange\");\n\nconst removeContactsRequest = createAction(\"contacts/removeContactsRequest\");\nconst removeContactsSuccess = createAction(\"contacts/removeContactsSuccess\");\nconst removeContactsError = createAction(\"contacts/removeContactsError\");\n\nexport {\n  addNewContactsRequest,\n  addNewContactsSuccess,\n  addNewContactsError,\n  getAllContactsRequest,\n  getAllContactsSuccess,\n  getAllContactsError,\n  filterChange,\n  removeContactsRequest,\n  removeContactsSuccess,\n  removeContactsError,\n};\n"],"sourceRoot":""}