{"version":3,"sources":["views/LoginView.js"],"names":["LoginView","state","email","password","handleChange","target","name","value","setState","handleSubmit","e","preventDefault","props","onLogin","this","onSubmit","autoComplete","type","onChange","location","pathname","Component","mapDispatchToProps","login","connect"],"mappings":"gOAIMA,E,4MACJC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBF,EAAOC,K,EAE1BE,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,QAAQ,EAAKZ,OACxB,EAAKO,SAAS,CAAEF,KAAM,GAAIJ,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,MAA4BW,KAAKb,MAAzBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACf,OACE,gCACE,uHACA,uBAAMY,SAAUD,KAAKL,aAAcO,aAAa,MAAhD,UACE,mEAEE,uBACEC,KAAK,QACLX,KAAK,QACLC,MAAOL,EACPgB,SAAUJ,KAAKV,kBAGnB,yEAEE,uBACEa,KAAK,WACLX,KAAK,WACLC,MAAOJ,EACPe,SAAUJ,KAAKV,kBAGnB,wBAAQa,KAAK,SAAb,SACoC,kBAAjCH,KAAKF,MAAMO,SAASC,SACjB,WACA,oB,GA1CQC,aAmDlBC,EAAqB,CACzBT,QAASU,KAGIC,sBAAQ,KAAMF,EAAdE,CAAkCxB","file":"static/js/login-view.f98681ce.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../redux/auth/auth.operations\";\n\nclass LoginView extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onLogin(this.state);\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div>\n        <h1>Страница логина</h1>\n        <form onSubmit={this.handleSubmit} autoComplete=\"off\">\n          <lable>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            ></input>\n          </lable>\n          <lable>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            ></input>\n          </lable>\n          <button type=\"submit\">\n            {this.props.location.pathname === \"/registration\"\n              ? \"register\"\n              : \"login\"}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\n\nconst mapDispatchToProps = {\n  onLogin: login,\n};\n\nexport default connect(null, mapDispatchToProps)(LoginView);\n\n"],"sourceRoot":""}